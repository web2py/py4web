# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, BSDv3 License
# This file is distributed under the same license as the py4web package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: py4web 1.20201112.1\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2020-11-29 10:41+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../chapter-08.rst:3
msgid "The RESTAPI"
msgstr ""

#: ../../chapter-08.rst:5
msgid ""
"Since version 19.5.10 PyDAL includes a restful API called RestAPI. It is "
"inspired by GraphQL but it’s not quite the same because it is less "
"powerful but, in the spirit of web2py, more practical and easier to use. "
"Like GraphSQL RestAPI allows a client to query for information using the "
"GET method and allows to specify some details about the format of the "
"response (which references to follow, and how to denormalize the data). "
"Unlike GraphSQL it allows the server to specify a policy and restrict "
"which queries are allowed and which one are not. They can be evaluated "
"dynamically per request based on the user and the state of the server. As"
" the name implied RestAPI allows all stardard methods GET, POST, PUT, and"
" DELETE. Each of them can be enabled or disabled based on the policy, for"
" individual tables and individual fields."
msgstr ""

#: ../../chapter-08.rst:18
msgid ""
"In the examples below we assume an app called “superheroes” and the "
"following model:"
msgstr ""

#: ../../chapter-08.rst:43
msgid "We also assume the following controller ``rest.py``:"
msgstr ""

#: ../../chapter-08.rst:68
msgid ""
"The policy is per table (or \\* for all tables and per method. authorize "
"can be True (allow), False (deny) or a function with the signature "
"(method, tablename, record_id, get_vars, post_vars) which returns "
"True/False. For the GET policy one can specify a list of allowed query "
"patterns (\\* for all). A query pattern will be matched against the keys "
"in the query string."
msgstr ""

#: ../../chapter-08.rst:75
msgid "The above action is exposed as:"
msgstr ""

#: ../../chapter-08.rst:81
msgid ""
"**About request.POST**: keep in mind that **request.POST** only contains "
"the form data that is posted using a **regular HTML-form** or javascript "
"**FormData** object. If you post just plain object (e.g. ``axios.post( "
"'path/to/api', {field:'some'} )``) you should pass **request.json** "
"instead of request.POST, since latter will contain just raw request-body "
"which is string, not json. See bottle.py documentation for more details."
msgstr ""

#: ../../chapter-08.rst:90
msgid "RestAPI GET"
msgstr ""

#: ../../chapter-08.rst:92
msgid ""
"The general query has the form ``{something}.eq=value`` where ``eq=`` "
"stands for “equal”, ``gt=`` stands for “greater than”, etc. The "
"expression can be prepended by ``not.``."
msgstr ""

#: ../../chapter-08.rst:96
msgid ""
"``{something}`` can be the name of a field in the table been queried as "
"in:"
msgstr ""

#: ../../chapter-08.rst:99
msgid "**All superheroes called “Superman”**"
msgstr ""

#: ../../chapter-08.rst:105
msgid ""
"It can be a the name of a field of a table referred by the table been "
"queried as in:"
msgstr ""

#: ../../chapter-08.rst:108
msgid "**All superheroes with real identity “Clark Kent”**"
msgstr ""

#: ../../chapter-08.rst:114
msgid ""
"It can be the name of a field of a table that refers to the table neen "
"queried as in:"
msgstr ""

#: ../../chapter-08.rst:117
msgid "**All superheroes with any tag superpower with strength > 90**"
msgstr ""

#: ../../chapter-08.rst:123
msgid ""
"(here tag is the name of the link table, the preceding ``superhero`` is "
"the name of the field that refers to the selected table and ``strength`` "
"is the name of the field used to filter)"
msgstr ""

#: ../../chapter-08.rst:127
msgid ""
"It can also be a field of the table referenced by a many-to-many linked "
"table as in:"
msgstr ""

#: ../../chapter-08.rst:130
msgid "**All superheroes with the flight power**"
msgstr ""

#: ../../chapter-08.rst:136
msgid "The key to understand the syntax above is to break it as follows:"
msgstr ""

#: ../../chapter-08.rst:142
msgid "and read it as:"
msgstr ""

#: ../../chapter-08.rst:144
msgid ""
"select records of table **superhero** referred by field **superhero** of "
"table **tag** when the **superpower** field of said table points to a "
"record with **description** **eq**\\ ual to “Flight”."
msgstr ""

#: ../../chapter-08.rst:148
msgid "The query allows additional modifiers for example"
msgstr ""

#: ../../chapter-08.rst:158
msgid ""
"The first 3 are obvious. @model returns a JSON description of database "
"model. Lookup denormalizes the linked field."
msgstr ""

#: ../../chapter-08.rst:161
msgid "Here are some practical examples:"
msgstr ""

#: ../../chapter-08.rst:163 ../../chapter-08.rst:198 ../../chapter-08.rst:273
#: ../../chapter-08.rst:320 ../../chapter-08.rst:372 ../../chapter-08.rst:413
#: ../../chapter-08.rst:514 ../../chapter-08.rst:912 ../../chapter-08.rst:937
#: ../../chapter-08.rst:962 ../../chapter-08.rst:992
msgid "URL:"
msgstr ""

#: ../../chapter-08.rst:169 ../../chapter-08.rst:204 ../../chapter-08.rst:279
#: ../../chapter-08.rst:328 ../../chapter-08.rst:381 ../../chapter-08.rst:419
#: ../../chapter-08.rst:520 ../../chapter-08.rst:652 ../../chapter-08.rst:754
#: ../../chapter-08.rst:837 ../../chapter-08.rst:918 ../../chapter-08.rst:943
#: ../../chapter-08.rst:968 ../../chapter-08.rst:998
msgid "OUTPUT:"
msgstr ""

#: ../../chapter-08.rst:326
msgid "(denormalize the real_identity and rename it identity)"
msgstr ""

#: ../../chapter-08.rst:378
msgid ""
"(denormalize the real_identity [but only fields name and job], collapse "
"the with the identity prefix)"
msgstr ""

#: ../../chapter-08.rst:645 ../../chapter-08.rst:747 ../../chapter-08.rst:829
msgid "URL (it's a single line, splitted for readability):"
msgstr ""

#: ../../chapter-08.rst:1017
msgid "Notice all RestAPI response have the fields"
msgstr ""

#: ../../chapter-08.rst:1028
msgid "and some optional fields:"
msgstr ""

#: ../../chapter-08.rst:1040
msgid "The exact specs are subject to change since this is a new feature."
msgstr ""

